name: Deployment workflow

on:
  workflow_call:
    inputs:
      mule_env:
        required: true
        description: mule environment property name in low case
        type: string
      var_suffix:
        required: true
        description: mule environment property name in upper case
        type: string
      in_rep_count:
        required: false
        description: set value for deployment property Replica Count
        type: string
      in_rep_size:
        required: false
        description: set value for deployment property Replica Size
        type: string

env:
  CA_CLIENTID: ${{ inputs.mule_env == 'prod' && secrets.MULE_CA_CLIENTID_PROD || secrets.MULE_CA_CLIENTID_NONPROD }}
  CA_CLIENTSECRET: ${{ inputs.mule_env == 'prod' && secrets.MULE_CA_CLIENTSECRET_PROD || secrets.MULE_CA_CLIENTSECRET_NONPROD }}

jobs:
  deploy-to-ch20:
    runs-on: ubuntu-latest

    steps:
    #print git reference path and commit sha
    - name: Print Commit Details
      run: |
        echo "Repository: ${{ github.ref }}"
        echo "Commit : ${{ github.sha }}"

    #checkout the source code from the git repo
    - uses: actions/checkout@v4

    #caches maven dependencies
    - uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    #setup java 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    #download the maven version 3.9.6
    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.9.6

    #create settings.xml file with the connected app credentials
    - uses: s4u/maven-settings-action@v3.0.0
      name: Create settings.xml
      if: ${{ !contains(env.assetresponse, 'assetId') }}
      with:
        servers: >
          [
            {
              "id": "AP-Repository",
              "username": "~~~Client~~~",
              "password": "${{ env.CA_CLIENTID }}~?~${{ env.CA_CLIENTSECRET }}"

            },
            {
              "id": "anypoint-exchange-v3",
              "username": "~~~Client~~~",
              "password": "${{ env.CA_CLIENTID }}~?~${{ env.CA_CLIENTSECRET }}"

            }
          ]

    #deploy app to the CloudHub 2.0
    - name: Deploy to CH2.0
      env:
        DEPLOYMENT_TARGET: ${{ inputs.mule_env == 'prod' && 'prod' || 'non-prod' }}
        L_REP_COUNT: ${{ inputs.in_rep_count || '1' }} 
        L_REP_SIZE: ${{ inputs.in_rep_size || '0.1' }}
        LAST_MILE_SEC: 'false'
        DEFAULT_URL: 'true'
        RUNTIME_VERSION: '4.6'
        RELEASE_CHANNEL: 'LTS'
        JAVA_VERSION: '17'
      run: |
        mvn mule:deploy -Dmule.artifact='./' \
          -DconnectedApp.clientId=${{ env.CA_CLIENTID }} \
          -DconnectedApp.clientSecret=${{ env.CA_CLIENTSECRET }} \
          -Dmule.env=${{ inputs.mule_env }} \
          -Dprivate.space.name="${{ env.DEPLOYMENT_TARGET }}" \
          -Denvironment=${{ inputs.mule_env }} \
          -Dapp.runtime=${{ env.RUNTIME_VERSION }} \
          -Dch2.replicas=${{ env.L_REP_COUNT }} \
          -Dch2.vCores=${{ env.L_REP_SIZE }} \
          -Dch2.lastSecurity=${{ env.LAST_MILE_SEC }} \
          -Dch2.defaultUrl=${{ env.DEFAULT_URL }} \
          -Dch2.releaseChannel=${{ env.RELEASE_CHANNEL }} \
          -Dch2.javaV=${{ env.JAVA_VERSION }} \
          -Dencryption.key=${{ secrets[format('MULE_ENCRYPTION_KEY_{0}', inputs.var_suffix)] }} \
          -Danypoint.client_id=${{ secrets[format('MULE_AP_CLIENTID_{0}', inputs.var_suffix)] }} \
          -Danypoint.client_secret=${{ secrets[format('MULE_AP_CLIENTSECRET_{0}', inputs.var_suffix)] }} 